package RoundController
import GroupUtils
import Entity
import HeroSelector
import Creeps
import Team
import HeroEntity
import FountainOfLife
import FountainOfMana
import GoblinMerchant
import MarketPlace
import Config
import ClosureTimers
import ClosureForGroups


public class RoundController
    private LinkedList<Entity> entities
    private Creeps creeps

    construct()
        entities = new LinkedList<Entity>()
        creeps = new Creeps()
    
    function start()
        spawnBuildings(Team.RABBITS)
        spawnBuildings(Team.SHEEP)
        for p in Team.RABBITS.getPlayers()
            new HeroEntity(p, Team.RABBITS.rect().getCenter(), randomHeroId())
        for p in Team.SHEEP.getPlayers()
            new HeroEntity(p, Team.SHEEP.rect().getCenter(), randomHeroId())
        creeps.add(Team.SHEEP)
        creeps.add(Team.RABBITS)
        new HeroEntity(Player(6), Team.SHEEP.rect().getCenter(), randomHeroId())
    
    private function clearMap()
        forUnitsInRect(playableMapRect) u ->
            if u.getEntity() != null
                destroy u.getEntity()
            else
                u.remove()
        entities.clear()
        creeps.clear()
        
    private function spawnBuildings(Team team)
        var map = new LinkedList<int>()
        for i = 0 to 3
            map.add(i)
        map.shuffle()
        let pos = [team.rect().getLeftTop(), team.rect().getRightBot(), team.rect().getRightTop(), team.rect().getLeftBot()]
        entities.add(new FountainOfLife(DUMMY_PLAYER, pos[map.get(0)].add(BUILDING_OFFSETS[map.get(0)])))
        entities.add(new FountainOfMana(DUMMY_PLAYER, pos[map.get(1)].add(BUILDING_OFFSETS[map.get(1)])))
        entities.add(new GoblinMerchant(DUMMY_PLAYER, pos[map.get(2)].add(BUILDING_OFFSETS[map.get(2)])))
        entities.add(new MarketPlace(DUMMY_PLAYER, pos[map.get(3)].add(BUILDING_OFFSETS[map.get(3)])))
        