package Team
import Config
import HashMap
import HashSet

public constant PLAYERS_PER_TEAM = 5

public enum Team
    RABBITS
    SHEEP

HashMap<Team, HashSet<player>> teamPlayers

public function initializeTeams()
    teamPlayers = new HashMap<Team, HashSet<player>>()
    teamPlayers.put(Team.RABBITS, new HashSet<player>())
    teamPlayers.put(Team.SHEEP, new HashSet<player>())
    for i = 0 to PLAYERS_PER_TEAM-1
        var p = Player(i)
        if p.isIngame() or p.getController() == MAP_CONTROL_COMPUTER
            teamPlayers.get(Team.RABBITS).add(p)
    
    for i = 6 to PLAYERS_PER_TEAM*2
        var p = Player(i)
        if p.isIngame() or p.getController() == MAP_CONTROL_COMPUTER
            teamPlayers.get(Team.SHEEP).add(p)

public function player.getTeam() returns Team
    if this.getId() < PLAYERS_PER_TEAM
        return Team.RABBITS
    else
        return Team.SHEEP

public function Team.getPlayers() returns HashSet<player>
    return teamPlayers.get(this)

public function Team.oppositeTeam() returns Team
    if this == Team.RABBITS
        return Team.SHEEP
    return Team.RABBITS

public function Team.creepController() returns player 
    if this == Team.RABBITS
        return RABBITS_PLAYER
    return SHEEP_PLAYER

public function Team.rect() returns rect 
    if this == Team.RABBITS
        return RECT_RABBITS
    return RECT_SHEEP
