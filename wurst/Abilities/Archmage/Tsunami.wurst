package Tsunami

import public BuffObjEditing
import public ChannelAbilityPreset
import CustomAbilityTooltipGenerator
import ClosureTimers
import ClosureForGroups
import Icons
import FxEntity
import Abilities
import EffectEntity
import Doodads
import HashSet
import Creep

constant SPELL_NAME = "Tsunami"
constant SPELL_HOTKEY = "R"
constant SPELL_TT_DESCRIPTION = "Summons a tsunami that washes away all creeps in front of the Archmage. Once the tsunami hits terrain, all creeps in it take damage."
constant SPELL_ICON = Icons.bTNCrushingWave
constant SPELL_MISSILE_ART = Doodads.waterfall
constant SPELL_DAMAGE = 300.

public let TSUNAMI_ID = compiletime(ABIL_ID_GEN.next())

@compiletime function genObj()
    new AbilityDefinitionDreadlordCarrionSwarm(TSUNAMI_ID)
    ..registerTooltipGenerator(new CustomAbilityTooltipGenerator(SPELL_TT_DESCRIPTION))
    ..presetIcon(SPELL_ICON)
    ..setRequiredLevel(6)

    ..tooltipStartListen()
    ..setLevels(1)
    ..setName(SPELL_NAME)
    ..presetHotkey(SPELL_HOTKEY)
    ..addTooltipProperty("Type", (int lvl) -> "Area of Effect")
    ..addTooltipProperty("Damage", (int lvl) -> SPELL_DAMAGE)
    ..presetCooldown(lvl -> 1)
    ..tooltipStopListen()

    ..presetTargetsAllowed(lvl -> "none")
    ..setMissileArt("")
    ..presetCastRange(lvl -> 99999)
    ..presetButtonPosNormal(3, 2)
    ..presetButtonPosResearch(3, 0)

class Wave extends Effect
    private unit hero
    private HashSet<unit> caught = new HashSet<unit>()

    construct(unit hero, vec3 pos, vec3 vel, angle angle)
        super(SPELL_MISSILE_ART, hero.getOwner(), pos, 1, vel, angle)
        this.hero = hero

    override function update()
        super.update()
        var effectPos = getPos()
        effectPos.x += GetRandomReal(-50,50)
        effectPos.y += GetRandomReal(-50,50)
        flashEffect(Abilities.crushingWaveDamage, effectPos)
        forUnitsInRange(pos.toVec2(), 140) u ->
            if u.isAlive() and not u.getOwner().isAllyOf(owner)
                flashEffect(Abilities.crushingWaveDamage, u.getPos())
                if not caught.has(u)
                    caught.add(u)
                    flashEffect(Abilities.crushingWaveDamage, u.getPos())
                    u.getCreepEntity().setVel(vel)
                    u.pause()
                    
        if not pos.toVec2().isTerrainWalkable()
            for u in caught
                hero.damageTarget(u, SPELL_DAMAGE)
            this.terminate()
        

init
    EventListener.add(EVENT_PLAYER_UNIT_SPELL_CAST) ->
        let spellId = GetSpellAbilityId()
        if spellId == TSUNAMI_ID
            let hero = GetSpellAbilityUnit()
            let targetPos = getSpellTargetPos()
            let dir = hero.getPos().normalizedPointerTo(targetPos)
            let angle = dir.getAngle()
            let right = angle.op_plus(angle(PIHALF)).toVec(200)
            let vel = (dir*10).toVec3()
            new Wave(hero, hero.getPos3Zero(), vel, angle)
            new Wave(hero, hero.getPos3Zero() + right, vel, angle)
            new Wave(hero, hero.getPos3Zero() - right, vel, angle)